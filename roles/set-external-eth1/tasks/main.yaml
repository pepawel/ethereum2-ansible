---
# LIGHTHOUSE
- name: Set external eth1 for lighthouse
  lineinfile:
    path: "{{ e2dc_install_path }}/config/lighthouse/beacon.env"
    regexp: '^ETH1_NODES='
    line: 'ETH1_NODES={{ connectivity.eth1_nodes | join(",") }}'
  when: setup == "lighthouse" and setup_override == "no-geth"
  become: yes
  become_user: "{{ stereum_user }}"

# LODESTAR
- name: Set external eth1 for lodestar
  lineinfile:
    path: "{{ e2dc_install_path }}/config/lodestar/beacon.json"
    regexp: '^\s*"providerUrl":.*'
    line: '        "providerUrl": {{ connectivity.eth1_nodes.0 | quote }}'
  when: setup == "lodestar" and setup_override == "no-geth"
  become: yes
  become_user: "{{ stereum_user }}"

# NIMBUS
- name: Remove all external eth1 for nimbus
  lineinfile:
    path: "{{ e2dc_install_path }}/docker-compose.yaml"
    regexp: '^\s*\-\s\-\-web3-url=.*'
    state: absent
  when: setup == "nimbus" and setup_override == "no-geth"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Add external eth1 for nimbus in order
  lineinfile:
    path: "{{ e2dc_install_path }}/docker-compose.yaml"
    insertbefore: '^\s*\-\s\-\-graffiti.*'
    line: '      - --web3-url={{ item }}'
  when: setup == "nimbus" and setup_override == "no-geth"
  become: yes
  become_user: "{{ stereum_user }}"
  with_items: "{{ connectivity.eth1_nodes }}"

# PRYSM no-geth
- name: Set external eth1 for prysm (no-geth)
  lineinfile:
    path: "{{ e2dc_install_path }}/config/prysm/beacon-no-geth.yaml"
    regexp: '^http\-web3provider:'
    line: 'http-web3provider: "{{ connectivity.eth1_nodes.0 }}"'
  when: setup == "prysm" and setup_override == "beacon-validator"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set external eth1 fallback for prysm (no-geth)
  lineinfile:
    path: "{{ e2dc_install_path }}/config/prysm/beacon-no-geth.yaml"
    regexp: '^fallback\-web3provider:'
    line: 'fallback-web3provider: [''{{ connectivity.eth1_nodes | join("'',''") }}'']'
  when: setup == "prysm" and setup_override == "beacon-validator"
  become: yes
  become_user: "{{ stereum_user }}"

# PRYSM with geth
- name: Set external eth1 for prysm (with geth)
  lineinfile:
    path: "{{ e2dc_install_path }}/config/prysm/beacon.yaml"
    regexp: '^http\-web3provider:'
    line: 'http-web3provider: "{{ connectivity.eth1_nodes.0 }}"'
  when: setup == "prysm" and setup_override == "beacon-validator"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set external eth1 fallback for prysm (with geth)
  lineinfile:
    path: "{{ e2dc_install_path }}/config/prysm/beacon.yaml"
    regexp: '^fallback\-web3provider:'
    line: 'fallback-web3provider: [''{{ connectivity.eth1_nodes | join("'',''") }}'']'
  when: setup == "prysm" and setup_override == "beacon-validator"
  become: yes
  become_user: "{{ stereum_user }}"

# TEKU
- name: Set external eth1 for teku
  lineinfile:
    path: "{{ e2dc_install_path }}/config/teku/beacon.yaml"
    regexp: '^eth1\-endpoint:'
    line: 'eth1-endpoint: [''{{ connectivity.eth1_nodes | join("'',''") }}'']'
  when: setup == "teku" and setup_override == "no-geth"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set external eth1 for teku (multiclient setup)
  lineinfile:
    path: "{{ e2dc_install_path }}/config/teku/beacon-mc.yaml"
    regexp: '^eth1\-endpoint:'
    line: 'eth1-endpoint: [''{{ connectivity.eth1_nodes | join("'',''") }}'']'
  when: setup == "teku" and setup_override == "no-geth"
  become: yes
  become_user: "{{ stereum_user }}"

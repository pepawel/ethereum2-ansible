---
- name: Install pip, expect
  apt:
    update_cache: yes
    name:
      - python3-pip
      - expect
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install pip, expect
  yum:
    name:
      - python3-pip
      - expect
    state: latest
  when: ansible_distribution == "CentOS"

- name: get existing wallet password
  command: "cat {{ e2dc_install_path }}/data/prysm/validator/passwords/wallet-password"
  register: existing_password
  ignore_errors: yes
  become: yes
  become_user: "{{ stereum_user }}"

- name: Generate wallet password
  shell: uuidgen
  register: wallet_password_gen 
  when: existing_password is defined and existing_password.stdout == ""

- name: Set wallet password
  copy:
    content: "{{ wallet_password_gen.stdout }}"
    dest: "{{ e2dc_install_path }}/data/prysm/validator/passwords/wallet-password"
  become: yes
  become_user: "{{ stereum_user }}"
  when: existing_password is defined and existing_password.stdout == ""

- name: Run import  
  shell: "./prysm_validator_import.sh {{ validator_password | quote }}"
  args:
    chdir: "{{ e2dc_install_path }}"
  register: import_output  
  become: yes
  become_user: "{{ stereum_user }}"
  when: setups[setup].create_account is defined

- name: error incorrect password
  fail:
    msg: "Incorrect Password!!! Please check your validator password and try it again."
  become: yes
  when: "'Password incorrect for key' in import_output.stdout"

- name: error empty password
  fail:
    msg: "Password is empty!"
  become: yes
  when: import_output.stdout == ""

# EOF

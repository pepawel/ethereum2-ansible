---
- name: Configure new graffiti in ethereum2.yaml
  lineinfile:
    path: "/etc/stereum/ethereum2.yaml"
    regexp: "^e2dc_graffiti:"
    line: "e2dc_graffiti: {{ e2dc_graffiti_updated }}"
  when: e2dc_graffiti_updated is defined
  become: yes

- name: Setting e2dc_graffiti
  set_fact: e2dc_graffiti="{{ e2dc_graffiti_updated }}"
  when: e2dc_graffiti_updated is defined

- name: Set graffiti for lighthouse
  lineinfile:
    path: "{{ e2dc_install_path }}/config/lighthouse/validator.env"
    regexp: '^GRAFFITI='
    line: 'GRAFFITI={{ e2dc_graffiti | default("stereum.net") }}'
  when: setup == "lighthouse"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set graffiti for lodestar
  lineinfile:
    path: "{{ e2dc_install_path }}/config/lodestar/validator.yaml"
    regexp: '^graffiti:.*'
    line: 'graffiti: "{{ e2dc_graffiti | default("stereum.net") }}"'
  when: setup == "lodestar"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set graffiti for multiclient
  lineinfile:
    path: "{{ e2dc_install_path }}/config/vouch/vouch.yml"
    regexp: '^\s*value:'
    line: '    value: "{{ e2dc_graffiti | default("stereum.net") }}"'
  when: setup == "multiclient"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set graffiti for nimbus
  lineinfile:
    path: "{{ e2dc_install_path }}/docker-compose.yaml"
    regexp: '^\s*\-\s\-\-graffiti='
    line: '      - --graffiti="{{ e2dc_graffiti | default("stereum.net") }}"'
  when: setup == "nimbus"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set graffiti for prysm
  lineinfile:
    path: "{{ e2dc_install_path }}/config/prysm/validator.yaml"
    regexp: '^graffiti:'
    line: 'graffiti: "{{ e2dc_graffiti | default("stereum.net") }}"'
  when: setup == "prysm"
  become: yes
  become_user: "{{ stereum_user }}"

- name: Set graffiti for teku
  lineinfile:
    path: "{{ e2dc_install_path }}/config/teku/beacon.yaml"
    regexp: '^validators-graffiti:'
    line: 'validators-graffiti: "{{ e2dc_graffiti | default("stereum.net") }}"'
  when: setup == "teku"
  become: yes
  become_user: "{{ stereum_user }}"

# EOF
